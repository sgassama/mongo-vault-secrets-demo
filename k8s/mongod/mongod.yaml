apiVersion: v1
kind: ServiceAccount
metadata:
  name: mongo
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: mongo-list-pods
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: mongo
subjects:
  - kind: ServiceAccount
    name: mongo
    namespace: mvsd-mongod
roleRef:
  kind: Role
  name: mongo-list-pods
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  labels:
    name: mongodb-service
spec:
  ports:
    - port: 27017
      targetPort: 27017
  clusterIP: None
  selector:
    role: mongo
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongod-statefulset
spec:
  serviceName: mongodb-service
  replicas: 3
  selector:
    matchLabels:
      role: mongo
      environment: test
      replicaset: MainRepSet
  template:
    metadata:
      labels:
        role: mongo
        environment: test
        replicaset: MainRepSet
    spec:
      serviceAccountName: mongo
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: replicaset
                      operator: In
                      values:
                        - MainRepSet
                topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 10
      volumes:
        - name: secrets-volume
          secret:
            secretName: mvsd-mongod-bootstrap-secret
            defaultMode: 256
        - name: tmp-volume
          emptyDir: { }
      initContainers:
        - name: hostvm-config
          image: node
          volumeMounts:
            - name: tmp-volume
              readOnly: false
              mountPath: /sys/kernel/mm/transparent_hugepage/
          command:
            - bash
            - "-c"
            - |
              set -o errexit
              set -o pipefail
              set -o nounset

              # Disable hugepages
              echo 'never' > /sys/kernel/mm/transparent_hugepage/enabled
              echo 'never' > /sys/kernel/mm/transparent_hugepage/defrag

              # Reset HugePages directory permissions
              chmod 0444 /sys/kernel/mm/transparent_hugepage/*
      containers:
        - name: mongod-container
          image: mongo:5.0.3
          command:
            - "mongod"
            - "--wiredTigerCacheSizeGB"
            - "0.25"
            - "--bind_ip"
            - "0.0.0.0"
            - "--replSet"
            - "MainRepSet"
          resources:
            requests:
              cpu: 0.2
              memory: 200Mi
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: secrets-volume
              readOnly: true
              mountPath: /etc/secrets-volume
            - name: mongodb-persistent-storage-claim
              mountPath: /data/db
        - name: mongo-sidecar
          image: cvallance/mongo-k8s-sidecar
          env:
            - name: MONGO_SIDECAR_POD_LABELS
              value: "role=mongo,environment=test,replicaset=MainRepSet"
            - name: KUBE_NAMESPACE
              value: "mvsd-mongod"
            - name: KUBERNETES_MONGO_SERVICE_NAME
              value: "mongodb-service"
  volumeClaimTemplates:
    - metadata:
        name: mongodb-persistent-storage-claim
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
